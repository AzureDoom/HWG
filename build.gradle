buildscript {
    repositories {
        jcenter()
    	maven { url  = 'https://plugins.gradle.org/m2/' }
    }
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.16.5:3.0.22:dev'
	//modImplementation 'curse.maven:TDI-245733:3144149'
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${cardinal_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${cardinal_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${cardinal_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-chunk:${cardinal_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:4.11.14"
    include "me.shedaniel.cloth:cloth-config-fabric:4.11.14"
    modImplementation "vazkii.patchouli:Patchouli:1.16.4-50-FABRIC"	
	modImplementation "de.siphalor:nbtcrafting-1.16:2+"
	include "de.siphalor:nbtcrafting-1.16:2+"	
    modImplementation "com.terraformersmc:modmenu:1.16.8"
    
	modImplementation 'curse.maven:BW-394915:3226787'
	modImplementation 'curse.maven:TC-341284:3100959'
	modImplementation 'curse.maven:Nourish-389718:3181134'
    modImplementation "top.theillusivec4.somnus:somnus-fabric:${project.somnus_version}"
    modImplementation "curse.maven:Pehkui-319596:3223971"
    modImplementation "io.github.ladysnake:Impersonate:${impersonate_version}"
    modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
    modImplementation "com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_wood_api_version}"
    modImplementation "com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}"
}

repositories {
    maven {
        name = "reach"
        url = "https://maven.jamieswhiteshirt.com/libs-release"
    }
	maven {
		url = "https://maven.theillusivec4.top/"
	}
	maven {	
		url = 'https://maven.fabricmc.net/io/github/prospector/modmenu/'
	}
	maven {
        name = "Ladysnake Libs"
        url = 'https://dl.bintray.com/ladysnake/libs'
    }
	maven {
        url = "https://www.cursemaven.com"
    }
     maven {
        name = "OnyxStudios"
        url = "https://maven.abusedmaster.xyz"
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name "Siphalor's Maven"
        url "https://maven.siphalor.de"
    }
    maven { url "https://maven.shedaniel.me/" }
    maven { url = 'https://maven.terraformersmc.com/' }
    maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
    maven { url 'https://maven.blamejared.com' }
    maven { url  = 'https://plugins.gradle.org/m2/' }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

minecraft {
	accessWidener "src/main/resources/hwg.accesswidener"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
	}
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "448106"
        	releaseType = "release"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
        	addGameVersion("1.16.5")
        	addGameVersion("Fabric")
        	addGameVersion("Java 8")

        	relations {
            	requiredDependency 'fabric-api'  
            	requiredDependency 'geckolib-fabric'  
            	optionalDependency 'patchouli-fabric'  
        	}
        	mainArtifact(remapJar)

        	afterEvaluate {
            	uploadTask.dependsOn("remapJar")
        	}
    	}
    	options {
    		//debug = true
        	forgeGradleIntegration = false
    	}
    }
}